name: Build, Push to ECR & Deploy to Elastic Beanstalk

on:
  push:
    branches: [master] # change if needed

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_ACCOUNT_ID: 121955270316
      BACKEND_REPO: iot-backend
      FRONTEND_REPO: iot-frontend
      S3_BUCKET: iot-platform-deployments
      ZIP_FILE: iot-platform-deploy.zip

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔓 Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: 🐳 Build backend Docker image
        run: |
          docker build -t $BACKEND_REPO ./backend
          docker tag $BACKEND_REPO:latest $ECR_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:latest

      - name: 🐳 Build frontend Docker image
        run: |
          docker build -t $FRONTEND_REPO ./frontend
          docker tag $FRONTEND_REPO:latest $ECR_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:latest

      - name: 🚀 Push backend to ECR
        run: |
          docker push $ECR_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO:latest

      - name: 🚀 Push frontend to ECR
        run: |
          docker push $ECR_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO:latest

      - name: 📦 Create Dockerrun.aws.json
        run: |
          cat > backend/Dockerrun.aws.json <<EOF
          {
            "AWSEBDockerrunVersion": 2,
            "containerDefinitions": [
              {
                "name": "iot-backend",
                "image": "${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_REPO}:latest",
                "essential": true,
                "memory": 512,
                "portMappings": [
                  {
                    "containerPort": 5000
                  }
                ]
              },
              {
                "name": "iot-frontend",
                "image": "${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_REPO}:latest",
                "essential": true,
                "memory": 512,
                "portMappings": [
                  {
                    "containerPort": 3000
                  }
                ]
              }
            ]
          }
          EOF

      - name: 🗜 Zip Dockerrun.aws.json
        run: |
          cd backend
          zip $ZIP_FILE Dockerrun.aws.json
          cd ..

      - name: ☁️ Upload to S3
        run: |
          aws s3 cp backend/$ZIP_FILE s3://$S3_BUCKET/$ZIP_FILE

      - name: ☁️ Deploy via Terraform
        run: |
          cd backend
          terraform init
          terraform apply -auto-approve
